# Generated by Django 2.2.13 on 2020-06-12 17:24

import django.contrib.auth.models
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('author', models.CharField(max_length=255)),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('body', models.CharField(max_length=255)),
                ('score', models.CharField(max_length=255)),
                ('topic', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='SupportEvolution',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hour', models.CharField(default='0', max_length=255)),
                ('positivity', models.IntegerField(default='0')),
                ('negativity', models.IntegerField(default='0')),
            ],
        ),
        migrations.CreateModel(
            name='Topic',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('author', models.CharField(max_length=255)),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('number_comments', models.IntegerField(default='0')),
                ('body', models.CharField(default='', max_length=255)),
                ('score', models.CharField(max_length=255)),
                ('subreddit', models.CharField(default='', max_length=255)),
                ('positivity', models.IntegerField(default='0')),
                ('negativity', models.IntegerField(default='0')),
                ('clustering1', models.TextField(default='')),
                ('clustering2', models.TextField(default='')),
            ],
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
